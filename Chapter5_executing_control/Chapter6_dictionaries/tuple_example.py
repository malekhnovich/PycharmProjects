'''
IF DICTIONARY KEYS MUST BE TYPE IMMUTABLE WHILE LIST TYPE IS MUTABLE
YOU CAN USE A TUPLE
TUPLE CONTAINS A SEQUENCE OF VALUES SEPERATED BY COMMAS AND ENCLOSED IN PARENTHESIS(()) INSTEAD OF BRACKETS([])
'''
#THIS IS A TUPLE BECAUSE THE PARENTHESIS ARE ROUND RATHER THAN SQUARE
#SQUARE PARENTHESIS WOULD BE A LIST
#THE DIFFERENCE BETWEEN THE TWO IS A TUPLE IS IMMUTABLE WHILE A LIST IS MUTABLE
#THIS MEANS THAT A TUPLE'S CONTENTS CAN NOT BE MODIFIED WHILE A LISTS CONTENTS CAN BE MODIFIED
days=('Mo','Tu','We')
print(days)
print(days[0])

#SINCE TUPLES ARE IMMUTABLE THEY CAN BE USED  AS KEYS FOR DICTIONARIES
#EXAMPLE OF USING TUPLES FOR THE KEYS IN DICTIONARY CALLED PHONEBOOK
phonebook={('Jason','Bay'):'25',
           ('David','Wright'):'22',
           ('Josh','Thole'):'23'}
print(phonebook[(('Jason','Bay'))])
print(phonebook.items())

#IF WE WANTED A ONE ITEM TUPLE WE WOULDNT BE ABLE TO JUST PUT ONE ELEMENT IN THE ROUND PARENTHESIS(())
#THIS IS BECAUSE THE COMPUTER WILL THINK IT IS A STRING OR ANOTHER INSTANCE THAT IS NOT A TUPLE
#IN ORDER TO GET A ONE ITEM TUPLE WE CAN PUT IN OUR SINGLE ITEM FOLLOWED BY A COMMA(,)

day2=('Mo',)#THIS IS THE PROPER EXECUTION OF A ONE ITEM TUPLE
day3=('Mo')#THIS IS THE INCORRECT EXECUTION OF A ONE ITEM TUPLE BECAUSE THE COMPUTER THINKS IT IS A STRING
print(type(day2))
print(type(day3))